FUNCTION ZSD_CHANGE_SO_SCHEDULINE_DATE.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_VBELN) TYPE  VBELN_VL
*"     VALUE(I_VBELN_SO) TYPE  VBELN_VA
*"     VALUE(I_LFDAT_EX) TYPE  LFDAT
*"  TABLES
*"      T_RETURN STRUCTURE  BAPIRET2
*"----------------------------------------------------------------------
  DATA : LV_MBDAT TYPE VBEP-MBDAT.

  DATA : LS_ORDER_HEADER_INX TYPE BAPISDH1X,
         LT_SCHEDULE_LINES   TYPE TABLE OF BAPISCHDL WITH HEADER LINE,
         LT_SCHEDULE_LINESX  TYPE TABLE OF BAPISCHDLX WITH HEADER LINE,
         LS_OPTIONS          TYPE SCHEDOPTIONS.

  CLEAR : LV_MBDAT,
          LS_ORDER_HEADER_INX,
          LT_SCHEDULE_LINES, LT_SCHEDULE_LINES[],
          LT_SCHEDULE_LINESX, LT_SCHEDULE_LINESX[],
          T_RETURN.

  SELECT A~VSTEL, "shipping point
         A~GRULG, "weight group
         A~ROUTE, "transport route
         A~LFDAT, "delivery date
         A~VSBED, "shipping conditions
         A~TRAGR, "transport group
         B~POSNR, "item No
         B~LADGR, "loading group
         B~MBDAT  "Availability Date
  INTO TABLE @DATA(LT_LIKP)
  FROM LIKP AS A INNER JOIN LIPS AS B
                         ON A~VBELN EQ B~VBELN
    WHERE A~VBELN EQ @I_VBELN.
  SORT LT_LIKP BY POSNR.

  SELECT VBELN, POSNR, LDDAT, WADAT, ETENR
    INTO TABLE @DATA(LT_VBEP)
    FROM VBEP
    WHERE VBELN EQ @I_VBELN_SO.

  LS_OPTIONS-FORWARDS_AUTO = 'X'.
  LS_OPTIONS-TRANSITTIME = 'X'.

  LOOP AT LT_LIKP INTO DATA(LS_LIKP).
    CALL FUNCTION 'SD_SCHEDULING'
      EXPORTING
        IF_SCHEDULE_DIRECTION  = '-'
        IF_SCHEDULE_SHIPPING   = 'X'
        IF_SCHEDULE_TRANSPORT  = 'X'
        IF_SHIPPING_POINT      = LS_LIKP-VSTEL
        IF_WEIGHT_GROUP        = LS_LIKP-GRULG
        IF_LOADING_GROUP       = LS_LIKP-LADGR
        IF_TRANSPORT_ROUTE     = LS_LIKP-ROUTE
        IF_DATE_TODAY          = SY-DATLO
        IF_TIME_TODAY          = SY-TIMLO
        IS_OPTIONS             = LS_OPTIONS
        IF_DELIVERY_DATE       = I_LFDAT_EX
        IF_SHIPPING_CONDITIONS = LS_LIKP-VSBED
        IF_TRANSPORT_GROUP     = LS_LIKP-TRAGR
        IF_RS_DOCUMENT_SW      = 'X'
      IMPORTING
        EF_MATERIAL_AVAIL_DATE = LV_MBDAT.

    "기존 DATE READ
    READ TABLE LT_VBEP INTO DATA(LS_VBEP) WITH KEY POSNR = LS_LIKP-POSNR.
    IF SY-SUBRC EQ 0.
      LT_SCHEDULE_LINES-SCHED_LINE = LS_VBEP-ETENR. "Schedule line
      LT_SCHEDULE_LINES-LOAD_DATE  = LS_VBEP-LDDAT. "LOAD DATE
      LT_SCHEDULE_LINES-GI_DATE    = LS_VBEP-WADAT. "GI DATE
      LT_SCHEDULE_LINES-DLV_DATE   = LS_LIKP-LFDAT. "DELIVERY DATE
    ENDIF.
    LT_SCHEDULE_LINES-ITM_NUMBER = LS_LIKP-POSNR. "ITEM NO
    LT_SCHEDULE_LINES-MS_DATE    = LV_MBDAT.      "자재 가용일
    APPEND LT_SCHEDULE_LINES.

    LT_SCHEDULE_LINESX-ITM_NUMBER = LS_LIKP-POSNR.
    LT_SCHEDULE_LINESX-SCHED_LINE = LS_VBEP-ETENR.
    LT_SCHEDULE_LINESX-UPDATEFLAG = 'U'.
    LT_SCHEDULE_LINESX-MS_DATE = 'X'.
    APPEND LT_SCHEDULE_LINESX.

    CLEAR: LT_SCHEDULE_LINES, LT_SCHEDULE_LINESX.
  ENDLOOP.

  IF LT_SCHEDULE_LINES[] IS NOT INITIAL.
    LS_ORDER_HEADER_INX-UPDATEFLAG = 'U'. "UPDATE

    CALL FUNCTION 'BAPI_SALESORDER_CHANGE'
      EXPORTING
        SALESDOCUMENT    = I_VBELN_SO
        ORDER_HEADER_INX = LS_ORDER_HEADER_INX
      TABLES
        RETURN           = T_RETURN
        SCHEDULE_LINES   = LT_SCHEDULE_LINES
        SCHEDULE_LINESX  = LT_SCHEDULE_LINESX.

    READ TABLE T_RETURN WITH KEY TYPE = 'E'.
    IF SY-SUBRC EQ 0.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    ELSE. "성공
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
        EXPORTING
          WAIT = 'X'.
    ENDIF.
  ENDIF.

ENDFUNCTION.
